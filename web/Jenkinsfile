pipeline {
    agent any

    environment {
        DATABASE_HOST = credentials('DATABASE_HOST')
        DATABASE_NAME = credentials('DATABASE_NAME')
        DATABASE_USERNAME = credentials('DATABASE_USERNAME')
        DATABASE_PASSWORD = credentials('DATABASE_PASSWORD')
        DATABASE_DIALECT = credentials('DATABASE_DIALECT')
        PORT = credentials('PORT')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-repo/CI-CD-practice.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("web-image:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        docker.image("web-image:${env.BUILD_NUMBER}").push()
                    }
                }
            }
        }

        stage('Deploy to Server') {
            steps {
                sshagent(['gcp-ssh-key']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no user@GCP_INSTANCE '
                    docker pull your-docker-hub/web-image:${env.BUILD_NUMBER} &&
                    docker-compose up -d'
                    """
                }
            }
        }
    }
}
